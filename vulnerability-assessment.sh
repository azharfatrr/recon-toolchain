#!/bin/bash
# Vulnerability scanning script using Nuclei with severity filtering and progress display

echo "[INFO] Running Nuclei for target: $1"

# --------------------------------------
# Check input
if [ -z "$1" ]; then
    echo "[ERROR] No target provided. Usage: $0 <target> [--force]"
    exit 1
fi

# --------------------------------------
# Configuration
TARGET="$1"
FORCE="$2"
PPATH=$(pwd)
RESULT_PATH="$PPATH/results/$TARGET"
RAW_PATH="$RESULT_PATH/raw/nuclei"
ENDPOINT_LIST="$RESULT_PATH/endpoints_active.txt"
LOGFILE="$RAW_PATH/nuclei.log"

NUCLEI_TEMPLATES_PATH="$HOME/nuclei-templates"
NUCLEI_SEVERITY="low,medium,high,critical"
NUCLEI_RATELIMIT=150  # Optional, defaults to 150

# --------------------------------------
# Required checks
: "${NUCLEI_TEMPLATES_PATH:?Need to set NUCLEI_TEMPLATES_PATH}"
: "${NUCLEI_SEVERITY:?Need to set NUCLEI_SEVERITY (e.g. info,low,medium,high,critical)}"
: "${NUCLEI_RATELIMIT:=150}"

# --------------------------------------
# Force cleanup
if [[ "$FORCE" == "--force" ]]; then
    echo "[INFO] Cleaning old Nuclei results..."
    rm -rf "$RAW_PATH"
fi

# --------------------------------------
# Setup folders
mkdir -p "$RAW_PATH" "$RESULT_PATH/nuclei_output"

# --------------------------------------
# Validate subdomain list
if [[ ! -s "$ENDPOINT_LIST" ]]; then
    echo "[ERROR] Subdomain list not found or empty: $ENDPOINT_LIST"
    exit 1
fi

# --------------------------------------
# Split severities and scan
IFS=',' read -ra severity_array <<< "$NUCLEI_SEVERITY"
total_levels=${#severity_array[@]}
current_level=1

for crit in "${severity_array[@]}"; do
    echo "[$(date +'%Y-%m-%d %H:%M:%S')] ($current_level/$total_levels) Scanning: Severity [$crit]"

    JSON_OUT="$RAW_PATH/${crit}_json.txt"
    TEXT_OUT="$RESULT_PATH/nuclei_output/${crit}.txt"

    # Skip if already scanned
    if [[ -s "$TEXT_OUT" ]]; then
        echo "[INFO] Skipping $crit â€“ parsed results already exist."
        ((current_level++))
        continue
    fi

    # Run Nuclei with stats enabled
    nuclei -l "$ENDPOINT_LIST" \
        -severity "$crit" \
        -dast \
        -nh -silent \
        -stats \
        -rl "$NUCLEI_RATELIMIT" \
        -retries 2 \
        ${NUCLEI_EXTRA_ARGS:-} \
        -t "$NUCLEI_TEMPLATES_PATH" \
        -j -o "$JSON_OUT" \
        2>>"$LOGFILE" >/dev/null

    # Parse results
    if [[ -s "$JSON_OUT" ]]; then
        jq -r '
            [
                "[" + .["template-id"] +
                (if .["matcher-name"] != null then ":" + .["matcher-name"] else "" end) +
                "] [" + .["type"] + "] [" + .info.severity + "] " +
                (.["matched-at"] // .host) +
                (if .["extracted-results"] != null then " " + (.["extracted-results"] | @json) else "" end)
            ] | .[]
        ' "$JSON_OUT" > "$TEXT_OUT"

        if [[ -s "$TEXT_OUT" ]]; then
            echo "[INFO] Results for severity [$crit]:"
            cat "$TEXT_OUT"
        else
            echo "[WARN] No matches found for severity [$crit]."
        fi
    else
        echo "[WARN] Nuclei did not produce any output for [$crit]."
    fi

    ((current_level++))
done

# --------------------------------------
# Completion
echo "[DONE] Nuclei scan complete. Results stored in: $RESULT_PATH/nuclei_output"
